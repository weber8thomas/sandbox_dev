name: Build container

on:
  push:
    #   tags:
    #     - "*"
    # pull_request:
    #   types: [closed]
    branches:
      - dev
  # - master
  # paths:
  #   - "github-actions-runner/Dockerfile"

env:
  IMAGE_NAME: test

jobs:
  create_dockerfile:
    name: Create Dockerfile
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2

      - name: Create container file
        uses: snakemake/snakemake-github-action@v1
        with:
          directory: .
          snakefile: "./workflow/Snakefile"
          task: "containerize"
          args: "--cores 1 --use-conda --configfile ./config/config.yaml"

      - name: Print Dockerfile
        run: |
          cat Dockerfile

      - uses: actions/upload-artifact@master
        with:
          name: Dockerfile
          path: ./Dockerfile

  show_container:
    name: Build and push image
    runs-on: ubuntu-20.04
    needs:
      - create_dockerfile
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@master
        with:
          name: Dockerfile
          path: ./Dockerfile

      - name: Print Dockerfile
        run: |
          cat Dockerfile

      - name: Run read-yaml action
        id: yaml-data
        uses: jbutcher5/read-yaml@main # You may wish to replace main with a version tag such as '1.6' etc.
        with:
          file: "./config/config.yaml"
          key-path: '["version"]' # Access the runs key then the using key and retuns the value.

      - name: Display read-yaml output
        run: echo "${{ steps.yaml-data.outputs.data }}"

      - name: Build Image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.IMAGE_NAME }}
          tags: ${{ steps.yaml-data.outputs.data }}
          dockerfiles: |
            ./Dockerfile

      - name: Push To DockerHub
        id: push-to-dockerhub
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io/weber8thomas
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

  # test_container:
  #   name: Test image
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: eWaterCycle/setup-singularity@v7
  #       with:
  #         singularity-version: 3.8.3
  #     - name: Testing data
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         stagein: "conda config --set channel_priority flexible"
  #         args: "--cores 1 --use-conda --use-singularity --config GC_analysis=True --conda-frontend mamba -p --verbose --debug"
