#https://github.com/docker/build-push-action/blob/master/docs/advanced/tags-labels.md

on:
  push:
    branches:
      - dev

jobs:
  # Formatting:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Formatting
  #       uses: github/super-linter@v4
  #       env:
  #         VALIDATE_ALL_CODEBASE: false
  #         DEFAULT_BRANCH: master
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         VALIDATE_SNAKEMAKE_SNAKEFMT: true

  # Linting:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: Linting
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         args: "--lint"

  Testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Testing data
        uses: snakemake/snakemake-github-action@v1.23.0
        with:
          directory: .
          snakefile: ./workflow/Snakefile
          stagein: "conda config --set channel_priority flexible"
          args: "--cores 1 --use-conda --config GC_analysis=True --conda-frontend mamba -p --verbose --debug"

  # create_file:
  #   name: Create file
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@v1

  #     - run: mkdir -p path/to/artifact

  #     - run: echo hello > path/to/artifact/world.txt

  #     - uses: actions/upload-artifact@master
  #       with:
  #         name: my-artifact
  #         path: path/to/artifact

  # use_file:
  #   needs:
  #     - create_file
  #   name: Use file
  #   runs-on: ubuntu-20.04
  #   steps:
  #     - uses: actions/checkout@master

  #     - uses: actions/download-artifact@master
  #       with:
  #         name: my-artifact
  #         path: path/to/artifact

  #     - run: tree -h . && cat path/to/artifact/world.txt

  # Testing_singularity_snakemake:
  #   name: Test image
  #   runs-on: ubuntu-20.04

  #   # container:
  #   #   image: owasp/zap2docker-stable
  #   #   options: --user root

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: eWaterCycle/setup-singularity@v7
  #       with:
  #         singularity-version: 3.8.3

  #     - name: Testing data
  #       uses: snakemake/snakemake-github-action@v1.24.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         args: "--cores 1 --use-singularity -p --verbose --debug"
  Testing_singularity_snakemake:
    name: Test image
    runs-on: ubuntu-20.04

    # container:
    #   image: owasp/zap2docker-stable
    #   options: --user root

    steps:
      - uses: actions/checkout@v2
      - uses: eWaterCycle/setup-singularity@v7
        with:
          singularity-version: 3.8.3

      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: conda-forge,bioconda,defaults
          channel-priority: true
          environment-file: env.yaml
          activate-environment: snakemake_env
      - shell: bash -l {0}
        run: |
          conda info
          conda list
      - shell: bash -l {0}
        name: Activate snakemake_env
        run: mamba activate snakemake_env && snakemake --version
  # Testing_singularity_sandbox:
  #   name: Test image
  #   runs-on: ubuntu-20.04

  #   # container:
  #   #   image: owasp/zap2docker-stable
  #   #   options: --user root

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: eWaterCycle/setup-singularity@v7
  #       with:
  #         singularity-version: 3.8.3

  #     - name: Test singularity
  #       run: |
  #         singularity pull docker://weber8thomas/ashleys-qc-pipeline:1.3.0 && singularity exec docker://weber8thomas/ashleys-qc-pipeline:1.3.0 sh -c "ls /conda-envs"

  # Testing_singularity:
  #   name: Test image
  #   runs-on: ubuntu-20.04

  #   container:
  #     image: owasp/zap2docker-stable
  #     options: --user root

  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: eWaterCycle/setup-singularity@v7
  #       with:
  #         singularity-version: 3.8.3

  #     # - name: List vmlinuz
  #     #   run: |
  #     #     find /boot -maxdepth 1 -name "vmlinuz-[0-9].*"
  #     # # - name: Modify Namespace
  #     # #   run: |
  #     # #     vmlinuz=$(find /boot -maxdepth 1 -name "vmlinuz-[0-9].*" | head -n 1) &&
  #     # #     grubby --args="namespace.unpriv_enable=1" \
  #     # #     --update-kernel="$vmlinuz"
  #     # - name: Modify Namespace
  #     #   run: |
  #     #     echo 1 > /proc/sys/kernel/unprivileged_userns_clone &&
  #     #     echo 1 > /proc/sys/kernel/unprivileged_bpf_disabled

  #     - name: Testing data
  #       uses: snakemake/snakemake-github-action@v1.23.0
  #       with:
  #         directory: .
  #         snakefile: ./workflow/Snakefile
  #         stagein: "conda config --set channel_priority flexible"
  #         args: "--cores 1 --use-conda --use-singularity --config GC_analysis=True --conda-frontend mamba -p --verbose --debug"
